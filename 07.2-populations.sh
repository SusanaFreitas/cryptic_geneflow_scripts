#!/bin/bash
#BSUB -L /bin/bash
#BSUB -q long
#BSUB -J pops-Tms
#BSUB -R "rusage[mem=8000]"
#BSUB -M 8000000
#BSUB -o pops.out
#BSUB -e pops.err
#BSUB -n 8 ## 8 CPU cores (processors) requested
####BSUB –R "span[ptile=2]" ## 4 cores on the same host

# Run populations. Calculate Hardy-Weinberg deviation, population statistics, f-statistics and 
# smooth the statistics across the genome. Export several output files.

# path to the populations executable
populations="/scratch/temporary/sfreitas/softwares/stacks/stacks-2.4/populations"

## path to the aligned bam folder
bam="/scratch/temporary/sfreitas/geneflow/07-stacks/Tms/alignments"

## path to the output folder
stacks="/scratch/temporary/sfreitas/geneflow/07-stacks/Tms/stacks"

## path to the popmap
popmap="/scratch/temporary/sfreitas/geneflow/07-stacks/Tms/popmap"


## command line for populations
eval $populations -P $stacks -M $popmap -p 2 -k -r 0.75 -f p_value --fasta-loci --fasta-samples --vcf --genepop --structure \
        --phylip --treemix --fstats --fst_correction p_value -t 8


## option -k,--smooth — enable kernel-smoothed π, FIS, FST, FST', and ΦST calculations.

## Kernel smoothing of reference aligned statistics (taken from the paper)
## If a reference genome is available, the populations program provides the option of using a sliding window (-k option).
## Because random biological or sequencing variation might occur at any particular SNP, this application makes it possible
## to more easily extract consistent signals of genomic regions such as signatures of increased or decreased diversity,
## nonrandom mating or directional selection (Hohenlohe et al. 2010b, 2012a). By applying a Gaussian weighting function,
## the program can generate a kernel-smoothed moving average across each contig, scaffold or chromosome. The sliding window
## is centred over each polymorphic locus on each chromosome in turn (Fig. 4), and the weights generated by the Gaussian function
## are applied to all the measures of either FIS or π within the window, and the scaled values are then averaged to produce a 
## smoothed statistic that is assigned to the location at the centre of window (c).
